<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "../User_Guide.ent">
%BOOK_ENTITIES;
]>

<section id="ratype_activities">

	<title>Activities</title>

	<para>&THIS.RA;
		Type &THIS.VERSION;
		defines two types of activities:
	</para>
	<variablelist>
		<varlistentry>
			<term>net.java.slee.resource.diameter.cca.CreditControlClientSession
			</term>
			<listitem>
				<para>
					This type of activity represents client side of credit control
					session. It is a source of answers to credit control requests
					issued with this activity. It is also source of re-authentication
					requests.  
				</para>
				<para>
					This activity type can be created with call to one of
					methods
					of
					CreditControlProvider. It ends once underlying credit control
					session ends.
					State machine for client credit control can be found
					<ulink url="http://tools.ietf.org/html/rfc4006#section-5">here</ulink>
					and
					<ulink url="http://tools.ietf.org/html/rfc4006#section-6">here</ulink>
					.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>net.java.slee.resource.diameter.cca.CreditControlServerSession
			</term>
			<listitem>
				<para>This type of activity represents server side of credit control
					session. It is source of credit control requests issued from client
					side and answers to re-auth requests.</para>
				<para>
					This activity type is created explicitly for incoming requests
					by
					Resource Adaptor. It ends once underlying credit control
					session
					ends.
					State machine for server credit control can be found
					<ulink url="http://tools.ietf.org/html/rfc4006#section-5">here</ulink>
					and
					<ulink url="http://tools.ietf.org/html/rfc4006#section-6">here</ulink>
				</para>
			</listitem>
		</varlistentry>
	</variablelist>

	<para>
		Both activities define methods required to properly function and
		expose necessary information to
		<acronym>JSLEE</acronym>
		services.
		Common part for each is defined as follows:
	</para>
	<programlisting language="Java" role="JAVA">

        public CreditControlSessionState getState();

        public String getSessionId();

        public CreditControlAVPFactory getCCAAvpFactory();

        public CreditControlMessageFactory getCCAMessageFactory();
	
	</programlisting>

	<variablelist>
		<varlistentry>
			<term>CreditControlSessionState getState();</term>
			<listitem>
				<para>
					returns current state of credit control session. State directly
					follows definition from credit control
					<ulink url="http://tools.ietf.org/html/rfc4006">rfc</ulink>
					.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>String getSessionId();</term>
			<listitem>
				<para>returns session Id of underlying diameter session.</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>CreditControlAVPFactory getCCAAvpFactory()</term>
			<listitem>
				<para>
					returns
					<acronym>AVP</acronym>
					factory capable of creating specifc
					<acronym>AVP</acronym>s for credit control. It also exposes means of accessing base
					<acronym>AVP</acronym>
					factory.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>CreditControlMessageFactory getCCAMessageFactory();</term>
			<listitem>
				<para>returns message factory capable of creating credit control
					messages. It also exposes means of accessing base factory.</para>
			</listitem>
		</varlistentry>
	</variablelist>

	<para>Client type activity interface is defined as follows:</para>
	<programlisting language="Java" role="JAVA">

       CreditControlRequest createCreditControlRequest();

       void sendCreditControlRequest(CreditControlRequest ccr) throws IOException;

       void sendInitialCreditControlRequest(CreditControlRequest ccr) throws IOException;

       void sendReAuthAnswer(ReAuthAnswer rar) throws IOException;

       void sendUpdateCreditControlRequest(CreditControlRequest ccr) throws IOException;

       void sendTerminationCreditControlRequest(CreditControlRequest ccr) throws IOException;
	</programlisting>
	<variablelist>
		<varlistentry>
			<term>CreditControlRequest createCreditControlRequest();</term>
			<listitem>
				<para>
					Creates credit control request for this activity. Fills <acronym>AVP</acronym>s appropriate for this session..
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>void sendCreditControlRequest(CreditControlRequest ccr) throws
				IOException;</term>
			<listitem>
				<para>
					sends credit control request, does not perform any other
					operations.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>void sendInitialCreditControlRequest(CreditControlRequest ccr)
				throws IOException;</term>
			<listitem>
				<para>
					sends credit control request. Ensures that its initial request by
					setting proper
					<acronym>AVP</acronym>
					.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>void sendUpdateCreditControlRequest(CreditControlRequest ccr)
				throws IOException;</term>
			<listitem>
				<para>
					sends credit control request. Ensures that its update request by
					setting proper
					<acronym>AVP</acronym>
					.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term> void sendTerminationCreditControlRequest(CreditControlRequest
				ccr) throws IOException;</term>
			<listitem>
				<para>
					sends credit control request. Ensures that its termination request
					by setting proper
					<acronym>AVP</acronym>
					.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>void sendReAuthAnswer(ReAuthAnswer rar) throws IOException;
			</term>
			<listitem>
				<para>
					sends re-authentication answer on this session.
				</para>
			</listitem>
		</varlistentry>

	</variablelist>

	<para>Server type activity interface is defined as follows:</para>
	<programlisting language="Java" role="JAVA">
	

      CreditControlAnswer createCreditControlAnswer();

      void sendCreditControlAnswer(CreditControlAnswer cca) throws IOException;

      void sendReAuthRequest(ReAuthRequest rar) throws IOException;
	
	
	</programlisting>
	<variablelist>
		<varlistentry>
			<term>
				CreditControlAnswer createCreditControlAnswer();
			</term>
			<listitem>
				<para>
					creates credit control answer for last received request.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>
				void sendCreditControlAnswer(CreditControlAnswer cca) throws
				IOException;
			</term>
			<listitem>
				<para>
					sends credit control answer through this session.
				</para>
			</listitem>
		</varlistentry>
		<varlistentry>
			<term>
				void sendReAuthRequest(ReAuthRequest rar) throws IOException;
			</term>
			<listitem>
				<para>
					sends re-authentication request through this session.
				</para>
			</listitem>
		</varlistentry>
	</variablelist>
	<note><para>It is safe to type cast activities to interface defined in Base RA Type: net.java.slee.resource.diameter.base.DiameterActivity</para></note>
</section>