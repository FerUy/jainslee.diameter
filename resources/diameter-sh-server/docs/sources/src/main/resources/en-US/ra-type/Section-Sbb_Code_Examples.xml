<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [<!ENTITY % BOOK_ENTITIES SYSTEM "../User_Guide.ent">%BOOK_ENTITIES;]>

<section id="ratype_sbb_code_examples">

	<title>Sbb Code Examples</title>

	<para>Simple Server-Side Example that receives an User-Data-Request and sends an User-Data-Answer.</para>
	
	<programlisting role="JAVA" langugage="Java">
	/* Method for receiving UDR and sending UDA with SUCCESS (code 2001) Result-Code. */
	public void onUserDataRequest(UserDataRequest event, ActivityContextInterface aci) {
		if (tracer.isInfoEnabled()) {
			tracer.info("Received UDR:\r\n" + event);
		}
		
		UserDataAnswer answer = ((ShServerActivity) aci.getActivity()).
			createUserDataAnswer(2001, false);

		try {
			if (tracer.isInfoEnabled()) {
				tracer.info("Created UDA:\r\n" + answer);
			}

			((ShServerActivity) aci.getActivity()).sendUserDataAnswer(answer);
		}
		catch (IOException e) {
			tracer.severe("Failed to send UDA.", e);
		}
	}
	</programlisting>

	<para>Simple Server-Side Example that sends an Push-Notification-Request and receives an Push-Notification-Answer.</para>
	
	<programlisting role="JAVA" langugage="Java">
	/* Method for handling timer event where a PNR created and sent */
	public void onTimerEvent(TimerEvent event, ActivityContextInterface aci) {
		ShServerNotificationActivity activity = null;

		for (ActivityContextInterface _aci : this.getSbbContext().getActivities()) {
			if (_aci.getActivity() instanceof ShServerNotificationActivity) {
				activity = (ShServerNotificationActivity) _aci.getActivity();
				break;
			}
		}

		if (activity == null) {
			tracer.severe("Activity is null, with list: " + Arrays.toString(this.getSbbContext().
				getActivities()));
			return;
		}

		PushNotificationRequest request = activity.createPushNotificationRequest();
		tracer.info("Created PNR:\r\n" + request);

		try {
			UserIdentityAvp ui = avpFactory.createUserIdentity();
			ui.setPublicIdentity("sip:user@diameter.mobicents.org");
			request.setUserIdentity(ui);
			request.setUserData("&lt;xml&gt;Some secrete user xml&lt;/xml&gt;");
			if(tracer.isInfoEnabled()) {
				tracer.info("Sending PNR:\r\n" + request);
			}
			activity.sendPushNotificationRequest(request);
		}
		catch (Exception e) {
			tracer.severe("Failed to send PNR.", e);
		}
	}
	
	...
	
	/* Method for handling PNA messages. Just print the Result-Code AVP. */
	public void onPushNotificationAnswer(PushNotificationAnswer pna, 
		ActivityContextInterface aci) {
		if (tracer.isInfoEnabled()) {
			tracer.info("Push-Notification-Answer received. Result-Code[" + pna.getResultCode() + "].");
		}
	}
	</programlisting>
</section>