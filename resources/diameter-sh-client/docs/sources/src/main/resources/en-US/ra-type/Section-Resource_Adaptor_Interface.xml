<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "../User_Guide.ent">
%BOOK_ENTITIES;
]>

<section id="ratype_ra_interface">

	<title>Resource Adaptor Interface</title>

	<para>The &THIS.PLATFORM; &THIS.RA; Resource Adaptor SBB Interface provides SBBs with access to the Diameter objects required for creating and sending messages. It is defined as follows: </para>

	<programlisting role="JAVA" langugage="Java">
	package net.java.slee.resource.diameter.sh.client;

	import java.io.IOException;

	import net.java.slee.resource.diameter.base.CreateActivityException;
	import net.java.slee.resource.diameter.base.events.avp.DiameterIdentity;
	import net.java.slee.resource.diameter.sh.DiameterShAvpFactory;
	import net.java.slee.resource.diameter.sh.events.ProfileUpdateAnswer;
	import net.java.slee.resource.diameter.sh.events.ProfileUpdateRequest;
	import net.java.slee.resource.diameter.sh.events.SubscribeNotificationsAnswer;
	import net.java.slee.resource.diameter.sh.events.SubscribeNotificationsRequest;
	import net.java.slee.resource.diameter.sh.events.UserDataAnswer;
	import net.java.slee.resource.diameter.sh.events.UserDataRequest;

	public interface ShClientProvider {

		public ShClientMessageFactory getClientMessageFactory();

		public DiameterShAvpFactory getClientAvpFactory();

		public ShClientActivity createShClientActivity() throws CreateActivityException;

		public ShClientSubscriptionActivity createShClientSubscriptionActivity()
			throws CreateActivityException;

		public UserDataAnswer userDataRequest(UserDataRequest message) throws IOException;

		public ProfileUpdateAnswer profileUpdateRequest(ProfileUpdateRequest message)
			throws IOException;

		public SubscribeNotificationsAnswer subscribeNotificationsRequest(
			SubscribeNotificationsRequest message) throws IOException;

		public DiameterIdentity[] getConnectedPeers();

		public int getPeerCount();
	}
	</programlisting>
	
	<para>
		<variablelist>
			<varlistentry>
				<term>public ShClientMessageFactory getClientMessageFactory();</term>
				<listitem><para>This method returns a <classname>ShClientMessageFactory</classname> implementation to be used to create <classname>DiameterMessage</classname> objects.</para></listitem>
			</varlistentry>
			<varlistentry>
				<term>public DiameterShAvpFactory getClientAvpFactory();</term>
				<listitem><para>This method returns a <classname>DiameterShAvpFactory</classname> implementation to be used to create <classname>DiameterAvp</classname> objects.</para></listitem>
			</varlistentry>
			<varlistentry>
				<term>public ShClientActivity createShClientActivity() throws CreateActivityException;</term>
				<listitem><para>This method creates a new Sh Client activity to send and receive Diameter Sh messages.</para></listitem>
			</varlistentry>
			<varlistentry>
				<term>public ShClientSubscriptionActivity createShClientSubscriptionActivity() throws CreateActivityException;</term>
				<listitem><para>This method creates a new Sh Client Subscription activity to send and receive Diameter Sh subscription related messages.</para></listitem>
			</varlistentry>
			<varlistentry>
				<term>public UserDataAnswer userDataRequest(UserDataRequest message) throws IOException;</term>
				<listitem><para>This method sends a synchronous UserDataRequest which will block until an answer is received from the peer.</para></listitem>
			</varlistentry>
			<varlistentry>
				<term>public ProfileUpdateAnswer profileUpdateRequest(ProfileUpdateRequest message) throws IOException;</term>
				<listitem><para>This method sends a synchronous ProfileUpdateRequest which will block until an answer is received from the peer.</para></listitem>
			</varlistentry>
			<varlistentry>
				<term>public SubscribeNotificationsAnswer subscribeNotificationsRequest(SubscribeNotificationsRequest message) throws IOException;</term>
				<listitem><para>This method sends a synchronous SubscribeNotificationsRequest which will block until an answer is received from the peer.</para></listitem>
			</varlistentry>
			<varlistentry>
				<term>public DiameterIdentity[] getConnectedPeers();</term>
				<listitem><para>This method returns the identities of peers this Diameter resource adaptor is connected to.</para></listitem>
			</varlistentry>
			<varlistentry>
				<term>public int getPeerCount();</term>
				<listitem><para>This method returns the number of peers this Diameter resource adaptor is connected to.</para></listitem>
			</varlistentry>
		</variablelist>
	</para>
</section>